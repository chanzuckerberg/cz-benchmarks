name: Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Cache python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-python-3.10-dev-${{ hashFiles('uv.lock') }}
          restore-keys: ${{ runner.os }}-python-3.10-dev-

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install dependencies
        run: |
          uv pip install --system --cache-dir ~/.cache/uv '.[dev]'
      
      - name: Cache env
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.local/lib/python*
            ~/.local/bin
          key: ${{ runner.os }}-env-${{ github.sha }}

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore env
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.local/lib/python*
            ~/.local/bin
          key: ${{ runner.os }}-env-${{ github.sha }}

      - name: Run linting
        run: make lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore env
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.local/lib/python*
            ~/.local/bin
          key: ${{ runner.os }}-env-${{ github.sha }}

      - name: Run tests
        run: |
          pytest

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore env
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.local/lib/python*
            ~/.local/bin
          key: ${{ runner.os }}-env-${{ github.sha }}

      - name: Generate coverage report
        run: |
          pytest --cov=czbenchmarks --cov-report=term-missing tests/

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.txt

      - name: Output full coverage report to GitHub summary
        run: |
          {
            echo "## Code Coverage Report";
            echo "";
            echo '```';
            cat coverage.txt;
            echo '```';
          } >> $GITHUB_STEP_SUMMARY
